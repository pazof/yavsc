2015-11-26  Paul Schneider  <paul@pschneider.fr>

	* LocalizedText.resx:
	* LocalizedText.fr.resx:
	* LocalizedText.Designer.cs:
	* LocalizedText.fr.Designer.cs: internationalisation

	* YavscModel.csproj: nouvelles configurations de déploiement

2015-11-26  Paul Schneider  <paul@pschneider.fr>

	* EventPub.cs:
	* BaseEvent.cs: internationalise l'évennement (la base d'une
	notification)

	* YaEvent.cs: les champs fournisseur d'une notification ne
	sont pas requis. On peut en avoir de la part du site lui même,
	qui ne soient pas à l'origine d'un evennement tiers du
	workflow. Dans tous les autres cas, ils devraient être
	renseignés ... à suivre.

	* Circle.cs:
	* CircleBase.cs: ajoute une methode de construition des
	destinataires à partir d'un tableau d'identifiants de cercles.

	* Activity.cs: implémente la photo activité dans le modèle

	* SimpleBookingQuery.cs: refabriqué

	* MessageWithPayLoad.cs: accuse aussi le champ `to` en cas
	d'absence de destinataire.

	* LocalizedText.resx:
	* LocalizedText.fr.resx:
	* LocalizedText.Designer.cs:
	* LocalizedText.fr.Designer.cs: internationalisation

2015-11-25  Paul Schneider  <paul@pschneider.fr>

	* BlogManager.cs: refactorisation 

	* Activity.cs: implémente un type de commande à associer à une
	activité.

	* LocalizedText.fr.resx:
	* LocalizedText.Designer.cs:
	* LocalizedText.fr.Designer.cs: La traduction de "ne pas
	publier mon activité"

	* LocalizedText.resx: La traduction de "ne pas publier mon
	activité", et de "Votre activité"


	* ManagerHelper.cs: refabrique l'instanciation des
	fournisseurs du workflow,
	pour avoir une liste de toutes les activité prises en charges
	par tous les fournisseurs de contenu.


	* Profile.cs: Implement le code activité de l'objet `Profile`

	* ProfileEdition.cs: xmldoc

	* SkillManager.cs: Formattage du code source

	* IContentProvider.cs: reformattage du code+
	propriété "Name" du fournisseur +
	definition des methodes relatives à la gestion des activités

	* WorkFlowManager.cs: Methodes de recupperation des activités
	fournies auprés des fournisseurs de contenu

	* YavscModel.csproj: renommage

2015-11-23  Paul Schneider  <paul@pschneider.fr>

	* Estimate.cs:
	* IContentProvider.cs: refactorisation fournisseurs

	* IDataProvider.cs: Permet aux fournisseurs d'identifier les
	contenus avec un type de donnée arbitraire,
	du moment que ce type identifie les contenus.

2015-11-23  Paul Schneider  <paul@pschneider.fr>

	* Manager.cs: implémente la fonction de construction des
	fournisseurs définis par une interface (sans type, ni concret,
	ni abstrait, comme ceux du workflow).

	* WorkFlowManager.cs: refactorisation: utiliser le code commun
	pour instancier le fournisseur de données.

2015-11-23  Paul Schneider  <paul@pschneider.fr>

	* ITitle.cs:
	* RssFeeds.cs:
	* Blog.cs:
	* BasePost.cs:
	* YaEvent.cs:
	* Estimate.cs:
	* BaseEvent.cs:
	* Activity.cs:
	* UTBlogEntryCollection.cs:
	* UUTBlogEntryCollection.cs: refactorisation: Les titres
	obtiennent une interface logicielle dédiée.

	* PerformerProfile.cs: refactorisation: Les identifiant
	deviennent génériques

	* IRating.cs:
	* IComment.cs:
	* IIdentified.cs: refactorisation: Les identifiant et
	commentaires deviennent génériques

	* ITagBackup.cs: refactorisation: un meilleur nom pour cette
	interface qui n'a pas encore d'implementeur.

	* UserNameBase.cs: xml doc

	* UserSkill.cs:
	* UserSkillComment.cs: Les commentaire deviennent génériques

	* OtherWebException.cs: classe obsolete

	* ViewRenderer.cs: classe obsolète

	* YavscModel.csproj: nettoyages de classes obsoletes, ajout
	des nouvelles interfaces et de la classe de base implementant
	l' "activité".

2015-11-23  Paul Schneider  <paul@pschneider.fr>

	* SimpleBookingQuery.cs: Implémente une simple commande de
	rendez-vous,
	en tant que commande du workflow.

	* PerformerProfile.cs: S'assure d'avoir une valeur pour le nom
	d'utilisateur à la création.

	* LocalizedText.resx:
	* LocalizedText.Designer.cs: "date préférée" en anglais

	* LocalizedText.fr.resx:
	* LocalizedText.fr.Designer.cs: "date préférée" en français

	* Profile.cs: à la creation d'un profile, on doit avoir un nom
	d'utilisateur,
	même dans le cas où le profile est anonyme (dans ce cas,
	on l'appelle identifiant anonyme).
	Sinon, on lève une exception.

	* SkillEntity.cs:
	* SkillManager.cs:
	* SkillProvider.cs: refactorisation (-Skill+SkillEntity)

	* YavscModel.csproj: * refactorisation: le nom `Skill` est
	celui de l'espace,
	celui de la classe devient `SkillEntity`.
	* Creation de la requête dite simple d'un rendez-vous (pour
	prestation)
	à une date donnée (sans heure), concernant simplement une
	activité.

2015-11-22  Paul Schneider  <paul@pschneider.fr>

	* YavscModel.csproj:
	* Commande.cs:
	* WorkFlowManager.cs:
	* WebFileSystemManager.cs:
	* UserFileSystemManager.cs: refactorisation du code, en vue de
	la mise en place
	de la commande sans enregistrement du client sur le site.

2015-11-21  Paul Schneider  <paul@pschneider.fr>

	* UserNameBase.cs: Permet l'usage des espaces dans les noms
	d'utilisateurs,
	à la création legacy, ou autres usage du nom d'utilisateur. 

2015-11-19  Paul Schneider  <paul@pschneider.fr>

	* YavscModel.csproj: Lua config

2015-11-17  Paul Schneider  <paul@pschneider.fr>

	* PerformerProfile.cs: implements a performer profile

	* SkillManager.cs:
	* SkillProvider.cs: Makes the method rendering skills return a
	PerformerProfile object

	* YavscModel.csproj: replaces the UserSkillProfile with the
	PerformerProfile class

	* UserSkillProfile.cs: obsolete

2015-11-17  Paul Schneider  <paul@pschneider.fr>

	* IRating.cs:
	* IComment.cs:
	* IIdentified.cs:
	* IAuthorized.cs:
	* BasePost.cs:
	* SkillProvider.cs: refactorization

	* Skill.cs:
	* YavscModel.csproj:
	* UserSkill.cs:
	* SkillManager.cs:
	* UserSkillRating.cs:
	* UserSkillProfile.cs:
	* UserSkillReference.cs:
	* UserSkillDeclaration.cs: implements the skill data model

	* UserSkillComment.cs: defines an user's skill comment

	* GDate.cs:
	* YaEvent.cs:
	* BlogProvider.cs:
	* CircleBase.cs:
	* Profile.cs:
	* CalendarListEntry.cs:
	* CalendarEventList.cs:
	* UserRole.cs:
	* ICalendarManager.cs:
	* ProfileEdition.cs:
	* LostPasswordModel.cs:
	* RegisterClientModel.cs: xmldoc

	* LocalizedText.fr.resx: skills

	* Manager.cs: throws an exception when implementation for the
	provider was not found

	* IDataProvider.cs: xml doc

2015-11-14  Paul Schneider  <paul@pschneider.fr>

	* IRated.cs:
	* BlogHelper.cs:
	* ICalendarManager.cs: 

	* Manager.cs:
	* BookingQuery.cs: refactoring

	* Manager.cs:
	* YavscModel.csproj:
	* SkillRating.cs:
	* SkillManager.cs:
	* SkillRating.cs:
	* SkillProvider.cs:
	* SkillManager.cs:
	* SkillProvider.cs:
	* SkillDeclaration.cs:
	* SkillDeclaration.cs: VIP skills

	* BasePost.cs: One may rate a bill

	* BlogProvider.cs: The blogs provider takes BlogEntry objects
	at Update time

	* LocalizedText.resx:
	* LocalizedText.fr.resx:
	* LocalizedText.Designer.cs:
	* LocalizedText.fr.Designer.cs: WIP skills

	* Profile.cs: prettifies the code, as long as the profile
	providers does'nt return any more DBNull values

	* BlogManager.cs: Uses the static ManagerHelper class to get
	the configuration

2015-11-11  Paul Schneider  <paul@pschneider.fr>

	* BasePost.cs: all BasePost contains a rate

	* BasePostInfo.cs: due to base implementation

	* BlogEntry.cs: code formatting

	* BlogManager.cs: Fixes the taginfo object delivering

	* BlogProvider.cs: refactoring

	* LocalizedText.resx:
	* LocalizedText.fr.resx:
	* LocalizedText.Designer.cs:
	* LocalizedText.fr.Designer.cs: localizes UserInRole 

	* LoginModel.cs: enables spaces in the legacy login names 

	* Profile.cs: gives users the theme choice

2015-11-08  Paul Schneider  <paul@pschneider.fr>

	* LoginModel.cs:
	* UserNameBase.cs: enables legacy login with spaces in the
	user name

	* ProfileEdition.cs: xml doc

2015-11-06  Paul Schneider  <paul@pschneider.fr>

	* ChangeLog:
	* TagInfo.cs:
	* BasePost.cs:
	* LocalizedText.resx:
	* BlogEntry.cs:
	* BlogManager.cs:
	* BlogProvider.cs:
	* BookQuery.cs:
	* BasePostInfo.cs:
	* LocalizedText.fr.resx:
	* IFreeDateSet.cs:
	* LocalizedText.Designer.cs:
	* Notification.cs:
	* LocalizedText.fr.Designer.cs:
	* ICalendarManager.cs:
	* BlogEntryCollection.cs:
	* ProfileEdition.cs:
	* WebFileSystemManager.cs: 

