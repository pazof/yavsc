@model BlogPost
@{
    ViewData["Title"]=Model.Title;
}
<!--
@section scripts { 
    <script src="~/js/comment.js" asp-append-version="true"></script>
    <script>
        $(document).ready() {
var doComment = new function(ctrlr, receiverid, comment) {
    console.log('commentting:' + comment);
    $.post(ctrlr, { Content: comment, Receiver: @Model.Id })
};

        }
        
    </script>
}
-->
<div class="container">
<h1 class="blogtitle" ismarkdown>@Model.Title</h1>
<img class="blogphoto" alt="" src="@Model.Photo" >

    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
    <span class="icon-bar"></span>
</button>

<div class="blogpost">
   
    <div markdown="@Model.Content" class="blog"></div>
   <hr/>

<div class="meta"> 
    @Html.DisplayFor(model => model.Author) 
       
    @Html.DisplayNameFor(model => model.DateModified) :

    @Html.DisplayFor(model => model.DateModified) 

    @Html.DisplayNameFor(model => model.DateCreated) :

    @Html.DisplayFor(model => model.DateCreated) 

    @Component.Invoke("Tagger",Model)
 </div>
     
</div>
<div class="comments">
  <!--  @foreach (var comment in model=>model.Comments) {
    <div markdown="@Model.Content" class="blogcomment">
    </div>
    <div markdown="@Model.Content" class="commentauthor">
        @Html.Display("ApplicationUser",c.Author)
    </div>
    } 

<form>
    <div class="form-horizontal">
        <div asp-validation-summary="ValidationSummary.ModelOnly" class="text-danger"></div>
        <div class="input-group" >
            <input asp-for="Content" class="form-control" placeholder="@SR["DoCommentPlaceHolder"]"/>
            <span class="input-group-btn">
                <input type="button" value="@SR["DoComment"]" class="btn btn-secondary"
                onclick="doComment('@ViewData["apictlr"]',@Model.PostId,$('#Content').val())"
                 />
            </span> 
        </div>
        </div>
        <span asp-validation-for="Content" class="text-danger" >
            </span>
      
        <input type="hidden" name="PostId" value="@Model.PostId"/>
        <input type="hidden" name="Id" value="@Model.Id"/>
    
</form>
</div>
-->
</div>
@if (await AuthorizationService.AuthorizeAsync(User, Model, new EditRequirement())) {
<a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-link">@SR["Edit"]</a>
}
<a asp-action="Index" class="btn btn-link">@SR["Back to List"]</a>
