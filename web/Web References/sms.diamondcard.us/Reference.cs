// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Yavsc.sms.diamondcard.us {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="SMSapi", Namespace="http://sms.diamondcard.us/SMSapi")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMSapiHandlerService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback sendOperationCompleted;
        
        private System.Threading.SendOrPostCallback statusOperationCompleted;
        
        public SMSapiHandlerService() {
            this.Url = "http://sms.diamondcard.us/";
        }
        
        public SMSapiHandlerService(string url) {
            this.Url = url;
        }
        
        public event sendCompletedEventHandler sendCompleted;
        
        public event statusCompletedEventHandler statusCompleted;
        
        /// <remarks>
///Sending request
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.diamondcard.us/SMSapi#send", RequestNamespace="http://sms.diamondcard.us/SMSapi", ResponseNamespace="http://sms.diamondcard.us/SMSapi", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public PodCustomTypesSendOut send(PodCustomTypesSendIn inParams) {
            object[] results = this.Invoke("send", new object[] {
                        inParams});
            return ((PodCustomTypesSendOut)(results[0]));
        }
        
        public System.IAsyncResult Beginsend(PodCustomTypesSendIn inParams, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("send", new object[] {
                        inParams}, callback, asyncState);
        }
        
        public PodCustomTypesSendOut Endsend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PodCustomTypesSendOut)(results[0]));
        }
        
        public void sendAsync(PodCustomTypesSendIn inParams) {
            this.sendAsync(inParams, null);
        }
        
        public void sendAsync(PodCustomTypesSendIn inParams, object userState) {
            if ((this.sendOperationCompleted == null)) {
                this.sendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendCompleted);
            }
            this.InvokeAsync("send", new object[] {
                        inParams}, this.sendOperationCompleted, userState);
        }
        
        private void OnsendCompleted(object arg) {
            if ((this.sendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendCompleted(this, new sendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks>
///Sending status request
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.diamondcard.us/SMSapi#status", RequestNamespace="http://sms.diamondcard.us/SMSapi", ResponseNamespace="http://sms.diamondcard.us/SMSapi", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("out")]
        public PodCustomTypesStatusOut status(PodCustomTypesStatusIn inParams) {
            object[] results = this.Invoke("status", new object[] {
                        inParams});
            return ((PodCustomTypesStatusOut)(results[0]));
        }
        
        public System.IAsyncResult Beginstatus(PodCustomTypesStatusIn inParams, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("status", new object[] {
                        inParams}, callback, asyncState);
        }
        
        public PodCustomTypesStatusOut Endstatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PodCustomTypesStatusOut)(results[0]));
        }
        
        public void statusAsync(PodCustomTypesStatusIn inParams) {
            this.statusAsync(inParams, null);
        }
        
        public void statusAsync(PodCustomTypesStatusIn inParams, object userState) {
            if ((this.statusOperationCompleted == null)) {
                this.statusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstatusCompleted);
            }
            this.InvokeAsync("status", new object[] {
                        inParams}, this.statusOperationCompleted, userState);
        }
        
        private void OnstatusCompleted(object arg) {
            if ((this.statusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.statusCompleted(this, new statusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sms.diamondcard.us/SMSapi")]
    public partial class PodCustomTypesSendIn {
        
        /// <remarks>
///Account Id
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccId;
        
        /// <remarks>
///PIN code
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PinCode;
        
        /// <remarks>
///Message to sent
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MsgTxt;
        
        /// <remarks>
///Send From phone number
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SendFrom;
        
        /// <remarks>
///Phone number or list of phone numbers to send message to
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("Destination", IsNullable=true)]
        public string[] Destination;
        
        /// <remarks>
///If this parameter set to 1 messages will be sent to all valid phone numbers in the list
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> IgnoreInvNumbers;
        
        /// <remarks>
///If this parameter set to 1 sending will start and go on till you have enough funds on your account
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> IgnoreInsufBalance;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sms.diamondcard.us/SMSapi")]
    public partial class PodCustomTypesSendOut {
        
        /// <remarks>
///ErrCode - one of the following: empty - success, INVDEST - invalid destinations error. List of invalid phone numbers available at 'InvalidDestinations' array, LOWBALANCE - Insufficient balance, NOTAVAIL - Service not available, ERR - misc errors. More details available at ErrMsg
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrCode;
        
        /// <remarks>
///Error description text
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrMsg;
        
        /// <remarks>
///Sending Id in case of successfull sending
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> SendingId;
        
        /// <remarks>
///When ErrCode=INVDEST this field contains array of invalid phone numbers
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("InvalidDestinations", IsNullable=true)]
        public string[] InvalidDestinations;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sms.diamondcard.us/SMSapi")]
    public partial class PodCustomTypesStatusIn {
        
        /// <remarks>
///Account Id
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccId;
        
        /// <remarks>
///PIN code
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PinCode;
        
        /// <remarks>
///Sending Id
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> SendingId;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sms.diamondcard.us/SMSapi")]
    public partial class PodCustomTypesStatusOut {
        
        /// <remarks>
///ErrCode - one of the following: empty - success, ERR - misc errors. More details available at ErrMsg
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrCode;
        
        /// <remarks>
///Error description text
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrMsg;
        
        /// <remarks>
///Number of messages in queue
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> Queue;
        
        /// <remarks>
///Number of sent messages
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> Sent;
        
        /// <remarks>
///Number of delivered messages (if available)
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> Delivered;
        
        /// <remarks>
///Number of failed messages
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> Failed;
        
        /// <remarks>
///How much this sending costs
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="float")]
        public System.Nullable<float> Cost;
        
        /// <remarks>
///Currency code for Cost
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency;
    }
    
    public partial class sendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PodCustomTypesSendOut Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PodCustomTypesSendOut)(this.results[0]));
            }
        }
    }
    
    public delegate void sendCompletedEventHandler(object sender, sendCompletedEventArgs args);
    
    public partial class statusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal statusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PodCustomTypesStatusOut Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PodCustomTypesStatusOut)(this.results[0]));
            }
        }
    }
    
    public delegate void statusCompletedEventHandler(object sender, statusCompletedEventArgs args);
}
