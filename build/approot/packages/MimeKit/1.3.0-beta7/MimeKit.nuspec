<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>MimeKit</id>
    <version>1.3.0-beta7</version>
    <title>MimeKit</title>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <authors>Jeffrey Stedfast</authors>
    <owners>Jeffrey Stedfast</owners>
    <licenseUrl>http://opensource.org/licenses/MIT</licenseUrl>
    <projectUrl>http://github.com/jstedfast/MimeKit</projectUrl>
    <iconUrl>https://raw.github.com/jstedfast/MimeKit/master/nuget/mimekit-50.png</iconUrl>
    <description>MimeKit is an Open Source library for creating and parsing MIME, S/MIME and PGP messages on desktop and mobile platforms. It also supports parsing of Unix mbox files.

Unlike any other .NET MIME parser, MimeKit's parser does not need to parse string input nor does it use a TextReader. Instead, it parses raw byte streams, thus allowing it to better support undeclared 8bit text in headers as well as message bodies. It also means that MimeKit's parser is significantly faster than other .NET MIME parsers (more than 25x faster than OpenPOP.NET and over 100x faster than AE.Net.Mail and MailSystem.NET).

MimeKit's parser also uses a real tokenizer when parsing the headers rather than regex or string.Split() like most other .NET MIME parsers. This means that MimeKit is much more RFC-compliant than any other .NET MIME parser out there, including the commercial implementations.

In addition to having a far superior parser implementation, MimeKit's object tree is not a derivative of System.Net.Mail objects and thus does not suffer from System.Net.Mail's massive limitations or bugs.

API documentation can be found on the web at http://www.mimekit.net/docs

For those that need SMTP, POP3 or IMAP support, check out https://github.com/jstedfast/MailKit</description>
    <summary>An Open Source library for creating and parsing MIME, S/MIME and PGP messages on desktop and mobile platforms.</summary>
    <releaseNotes>* Added a new SecureMimeContext.Verify() overload that returns the extracted content stream.
* Exposed the SecureMimeContext.GetDigitalSignatures() method as protected, allowing custom
  subclasses to implement their own Verify() methods.
* Fixed X509CertificateDatabase to store the X509Certificate NotBefore and NotAfter DateTimes
  in UTC rather than LocalTime.
* Added a work-around for GoDaddy's ASP.NET web host which does not support the iso-8859-1
  System.Text.Encoding (used as a fallback encoding within MimeKit) by falling back to
  Windows-1252 instead.
* Added new convenience .ctors for CmsSigner and CmsRecipient for loading certificates from a
  file or stream.
* Fixed UrlScanner to properly deal with IPv6 literals in email addresses.
* Added a MultipartReport class for multipart/report.
* Fixed serialization for embedded message/* parts. (issue #228)
* Fixed MimeMessage.WriteTo() to only make sure that the stream ends with a newline if it
  wasn't parsed. (issue #227)
* Fixed MimeMessage to only set a MIME-Version if the message was not produced by the parser.
* Ignore timezones outside the range of -1200 to +1400.
* Added InternetAddress.Clone() to allow addresses to be cloned.
* Properly serialize message/rfc822 parts that contain an mbox marker.
* Fixed MimeMessage.DkimSign() to not enforce 7bit encoding of the body. (issue #224)
* Fixed ParameterList.IndexOf(string) to be case insensitive.</releaseNotes>
    <copyright>Xamarin Inc.</copyright>
    <language>en-US</language>
    <tags>mime encryption dkim security smime s/mime openpgp pgp mbox mail email parser tnef dnxcore50 net35 net40 net45 xamarin android ios monodroid monotouch win8 wp81</tags>
    <dependencies>
      <group targetFramework=".NETFramework3.5" />
      <group targetFramework=".NETFramework4.0" />
      <group targetFramework=".NETFramework4.5" />
      <group targetFramework=".NETFramework4.5.1" />
      <group targetFramework="MonoAndroid1.0" />
      <group targetFramework="Unsupported0.0" />
      <group targetFramework=".NETPlatform5.4">
        <dependency id="System.Security.Cryptography.Algorithms" version="4.0.0-beta-23516" />
        <dependency id="System.Security.Cryptography.Primitives" version="4.0.0-beta-23516" />
        <dependency id="System.Runtime.Serialization.Primitives" version="4.1.0-beta-23516" />
        <dependency id="System.Text.Encoding.Extensions" version="4.0.11-beta-23516" />
        <dependency id="System.Text.Encoding.CodePages" version="4.0.1-beta-23516" />
        <dependency id="System.Text.Encoding" version="4.0.11-beta-23516" />
        <dependency id="System.Net.NameResolution" version="4.0.0-beta-23516" />
        <dependency id="System.Net.NetworkInformation" version="4.1.0-beta-23516" />
        <dependency id="System.Net.Primitives" version="4.0.11-beta-23516" />
        <dependency id="System.Collections" version="4.0.11-beta-23516" />
        <dependency id="System.Data.Common" version="4.0.1-beta-23516" />
        <dependency id="System.Reflection" version="4.1.0-beta-23516" />
        <dependency id="System.Threading" version="4.0.11-beta-23516" />
        <dependency id="System.Runtime" version="4.0.21-beta-23516" />
        <dependency id="System.Linq" version="4.0.1-beta-23516" />
        <dependency id="Microsoft.CSharp" version="4.0.1-beta-23516" />
        <dependency id="Portable.BouncyCastle" version="1.8.0" />
      </group>
      <group targetFramework=".NETPortable0.0-net45+win+wp80+MonoAndroid10+Xamarin.iOS10+MonoTouch10">
        <dependency id="Portable.BouncyCastle" version="1.8.0" />
      </group>
      <group targetFramework="WindowsPhoneApp8.1">
        <dependency id="Portable.BouncyCastle" version="1.8.0" />
      </group>
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.5" />
      <frameworkAssembly assemblyName="System.Core" targetFramework=".NETFramework4.5" />
      <frameworkAssembly assemblyName="System.Data" targetFramework=".NETFramework4.5" />
      <frameworkAssembly assemblyName="System.Security" targetFramework=".NETFramework4.5" />
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.0" />
      <frameworkAssembly assemblyName="System.Core" targetFramework=".NETFramework4.0" />
      <frameworkAssembly assemblyName="System.Data" targetFramework=".NETFramework4.0" />
      <frameworkAssembly assemblyName="System.Security" targetFramework=".NETFramework4.0" />
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework3.5" />
      <frameworkAssembly assemblyName="System.Core" targetFramework=".NETFramework3.5" />
      <frameworkAssembly assemblyName="System.Data" targetFramework=".NETFramework3.5" />
      <frameworkAssembly assemblyName="System.Security" targetFramework=".NETFramework3.5" />
      <frameworkAssembly assemblyName="System" targetFramework="MonoAndroid1.0" />
      <frameworkAssembly assemblyName="System.Core" targetFramework="MonoAndroid1.0" />
      <frameworkAssembly assemblyName="System.Data" targetFramework="MonoAndroid1.0" />
      <frameworkAssembly assemblyName="System" targetFramework="Unsupported0.0" />
      <frameworkAssembly assemblyName="System.Core" targetFramework="Unsupported0.0" />
      <frameworkAssembly assemblyName="System.Data" targetFramework="Unsupported0.0" />
    </frameworkAssemblies>
  </metadata>
</package>